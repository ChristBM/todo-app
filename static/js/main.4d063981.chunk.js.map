{"version":3,"sources":["App/Hooks/useTodos.jsx","App/Hooks/useLocalStorage.jsx","Components/Header/index.jsx","Components/TodoSearch/index.jsx","Components/TodoLogo/index.jsx","Components/SkeletonLoader/index.jsx","Components/TodoCounter/index.jsx","Components/TodoList/index.jsx","Components/TodoState/index.jsx","Components/TodoIcon/index.jsx","Components/TodoItem/index.jsx","Components/CreateTodoButtom/index.jsx","Components/Modal/index.js","Components/TodoForm/index.jsx","Components/ChangeAlert/index.jsx","Components/ChangeAlert/withStorageListener.jsx","App/index.jsx","index.js"],"names":["useTodos","itemName","initialValue","useState","reload","setReload","loading","setLoading","error","setError","item","setItem","useEffect","setTimeout","parsedItems","localStorageItems","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","sincronize","useLocalStorage","todos","saveTodos","reloadTodos","sincronizeTodos","searchValue","setSearchValue","openModal","setOpenModal","rotateAdd","setRotateAdd","completedTodos","filter","todo","complete","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","min_media","matchMedia","max_media","loadReziserHeader","matches","window","innerWidth","onSearchValueChange","ev","console","log","target","value","loadReziserCounter","loadReziserList","completeTodo","todoIndex","findIndex","newTodos","deleteTodo","splice","addTodo","some","unshift","completed","onClickTodoButton","Header","props","className","onLoading","onHeaderReady","TodoSearch","placeholder","onChange","TodoLogo","SkeletonLoaderHeader","ancho","speed","width","height","backgroundColor","foregroundColor","x","y","rx","ry","SkeletonLoaderCounter","SkeletonLoaderList","alto","SkeletonLoaderButton","cx","cy","r","TodoCounter","onCounterReady","onEmpty","TodoList","innerHeight","onError","onNotFound","onClean","map","render","children","TodoState","clean","arrayStates","state","icon","title","TodoIcon","typeIcon","selectClass","TodoItem","iconTrash","setIconTrash","onClick","onDelete","onMouseOver","onMouseLeave","onComplete","CreateTodoButtom","onButtonReady","Modal","ReactDOM","createPortal","onShowModal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","holder","setHolder","onSubmit","preventDefault","type","WrappedComponent","ChangeAlertWithStorageListener","show","toggleShow","storageChange","setStorageChange","addEventListener","change","key","App"],"mappings":"uYAGO,SAASA,IAEd,MCHK,SAA0BC,EAAUC,GAEzC,MAA8BC,oBAAU,GAAxC,mBAAQC,EAAR,KAAgBC,EAAhB,KACA,EAAgCF,oBAAU,GAA1C,mBAAQG,EAAR,KAAiBC,EAAjB,KACA,EAA4BJ,oBAAU,GAAtC,mBAAQK,EAAR,KAAeC,EAAf,KACA,EAA0BN,mBAAUD,GAApC,mBAAQQ,EAAR,KAAcC,EAAd,KAkDA,OAhDAC,qBAAW,WAETC,YAAY,WAEV,IACE,IACIC,EADEC,EAAoBC,aAAaC,QAAShB,GAG3Cc,EAODD,EAAcI,KAAKC,MAAOJ,IAL1BC,aAAaL,QAASV,EAAUiB,KAAKE,UAAWlB,IAChDY,EAAc,IAOlBH,EAASG,GACTP,GAAY,GACZF,GAAW,GAEb,MAAMG,GACJC,EAAUD,MAGX,OAEF,CAAEJ,IAoBE,CAAEM,OAAMW,SAlBE,SAAAC,GAEf,IACE,IAAMC,EAAkBL,KAAKE,UAAWE,GACxCN,aAAaL,QAASV,EAAUsB,GAChCZ,EAASW,GAEX,MAAMd,GACJC,EAAUD,KAUWF,UAASE,QAAOJ,SAAQoB,WAL9B,WACjBjB,GAAY,GACZF,GAAW,KDjDkGoB,CAAiB,WAAY,IAA9HC,EAAd,EAAQhB,KAAuBiB,EAA/B,EAAqBN,SAAqBf,EAA1C,EAA0CA,QAASE,EAAnD,EAAmDA,MAAeoB,EAAlE,EAA0DxB,OAAiCyB,EAA3F,EAA+EL,WAE/E,EAAwCrB,mBAAS,IAAjD,mBAAQ2B,EAAR,KAAqBC,EAArB,KAEA,EAAoC5B,oBAAU,GAA9C,mBAAQ6B,EAAR,KAAmBC,EAAnB,KAEA,EAAoC9B,mBAAS,uBAA7C,mBAAQ+B,EAAR,KAAmBC,EAAnB,KAEMC,EAAiBV,EAAMW,QAAQ,SAAAC,GAAI,QAAMA,EAAKC,YAAUC,OACxDC,EAAaf,EAAMc,OAErBE,EAAgB,GAGlBA,GAFEZ,EAAYU,QAAU,EAERd,EAIAA,EAAMW,QAAQ,SAAAC,GAC5B,IAAMK,EAAWL,EAAKM,KAAKC,cACrBC,EAAahB,EAAYe,cAE/B,OAAOF,EAASI,SAAUD,MAI9B,IA0CME,EAAYC,WAAW,sBACvBC,EAAYD,WAAW,sBAwC7B,MAEE,CACE3C,UACA6C,kBA1CsB,WACxB,OAAMH,EAAUI,QAAUF,EAAUE,QAI5BJ,EAAUI,QAAiB,IAC3BF,EAAUE,QAAiB,SAA9B,EAHIC,OAAOC,YAwCdxB,cAAayB,oBAxFW,SAAAC,GAC5BC,QAAQC,IAAKF,EAAGG,OAAOC,OACvB7B,EAAgByB,EAAGG,OAAOC,QAuFtBC,mBAnCuB,WACzB,OAAMb,EAAUI,QAAUF,EAAUE,QAI5BJ,EAAUI,QAAiB,IAC3BF,EAAUE,QAAiB,SAA9B,EAHIC,OAAOC,WAAa,IAiC3Bb,aACAL,iBACA0B,gBA7BoB,WACtB,OAAMd,EAAUI,QAAUF,EAAUE,QAI5BJ,EAAUI,QAAiB,IAC3BF,EAAUE,QAAiB,SAA9B,EAHIC,OAAOC,WAAa,IA2B3BZ,gBACAqB,aApEiB,SAAAnB,GACnB,IAAMoB,EAAYtC,EAAMuC,WAAW,SAAA3B,GAAI,OAAIA,EAAKM,OAASA,KAEnDsB,EAAQ,YAAQxC,GACtBwC,EAAUF,GAAYzB,UAAW,EACjCZ,EAAWuC,IAgETC,WA7De,SAAAvB,GACjB,IAAMoB,EAAYtC,EAAMuC,WAAW,SAAA3B,GAAI,OAAIA,EAAKM,OAASA,KAEnDsB,EAAQ,YAAQxC,GACtBwC,EAASE,OAAQJ,EAAW,GAC5BrC,EAAWuC,IAyDTG,QA3FY,SAAAzB,GAEd,IAAMsB,EAAQ,YAAQxC,GAEtB,OADsBwC,EAASI,MAAM,SAAAA,GAAI,OAAI1B,IAAS0B,EAAK1B,SAEzDa,QAAQC,IAAI,uDACL,IAGPQ,EAASK,QAAS,CAChB3B,OACA4B,WAAW,IAEb7C,EAAWuC,GACXjC,GAAc,GACdE,EAAc,wBACP,IA4EPH,YAAWC,eACXC,YAAWC,eACX3B,QACAiE,kBA5BsB,WACxBxC,GAAc,SAAAD,GAAS,OAAKA,KAG1BG,EAFgB,wBAAdD,EAEY,6BAGA,wBAsBdL,kBACAD,e,iBElIC,SAAS8C,EAAQC,GAEtB,OACE,wBAAQC,UAAU,SAAlB,SAEID,EAAMrE,QAAUqE,EAAME,YAAcF,EAAMG,kB,MCL3C,SAASC,EAAT,GAA6D,IAAtCjD,EAAqC,EAArCA,YAAayB,EAAwB,EAAxBA,oBAE1C,OACC,uBACCqB,UAAU,aACVI,YAAY,uBACZpB,MAAQ9B,EACRmD,SAAW1B,I,MCPP,SAAS2B,IACZ,OACI,qBAAKN,UAAU,e,kBCFhB,SAASO,EAAsBR,GAEpC,MAAkBxE,mBAAUwE,EAAMS,OAA1BA,EAAR,oBAEA,OACE,cAAC,IAAD,yBACEC,MAAQ,GACRC,MAAQF,EACRG,OAAS,GACTC,gBAAgB,UAChBC,gBAAgB,WACZd,GANN,aAQA,sBAAMe,EAAE,IAAIC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAIP,MAAM,MAAMC,OAAO,UAMhD,SAASO,EAAuBnB,GAErC,MAAkBxE,mBAAUwE,EAAMS,OAA1BA,EAAR,oBAEA,OACE,cAAC,IAAD,yBACEC,MAAQ,GACRC,MAAQF,EACRG,OAAS,GACTC,gBAAgB,UAChBC,gBAAgB,WACZd,GANN,aAQA,sBAAMe,EAAE,IAAIC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAIP,MAAM,MAAMC,OAAO,UAMhD,SAASQ,EAAoBpB,GAElC,MAAkBxE,mBAAUwE,EAAMS,OAA1BA,EAAR,oBACA,EAAiBjF,mBAAUwE,EAAMqB,MAAzBA,EAAR,oBAEA,OACE,cAAC,IAAD,yBACAX,MAAQ,GACRC,MAAQF,EACRG,OAASS,EACTR,gBAAgB,UAChBC,gBAAgB,WACZd,GANJ,aASA,sBAAMe,EAAE,IAAIC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAIP,MAAM,MAAMC,OAAO,YAMhD,SAASU,EAAsBtB,GAEpC,OACE,cAAC,IAAD,yBACAU,MAAQ,GACRC,MAAQ,GACRC,OAAS,GACTC,gBAAgB,UAChBC,gBAAgB,WACZd,GANJ,aASA,wBAAQuB,GAAG,KAAKC,GAAG,KAAKC,EAAE,U,MCvEvB,SAASC,EAAa1B,GAE3B,OACE,yBAASC,UAAU,qBAAnB,SAEID,EAAMrE,QACFqE,EAAME,YACNF,EAAMlC,WACFkC,EAAM2B,iBACN3B,EAAM4B,Y,MCTf,SAASC,EAAU7B,GAMxB,OAEE,uBAAMC,UAAU,kBAAhB,UACE,0BAASA,UAAYD,EAAMrE,QAAU,8BAAgC,4BAArE,UAEIqE,EAAMrE,SAAWqE,EAAME,UARtBxB,OAAOoD,YAAc,KAUtB9B,EAAMnE,OAASmE,EAAM+B,WAElB/B,EAAMrE,UAAYqE,EAAMlC,YAAgBkC,EAAM4B,WAE9C5B,EAAMjC,cAAcF,QAAUmC,EAAMlC,YAAckC,EAAM7C,YAAgB6C,EAAMgC,aAAehC,EAAMiC,UAExG,6BACIjC,EAAMjC,cAAcmE,IAAKlC,EAAMmC,aAKnCnC,EAAMoC,Y,MCzBP,SAASC,EAAT,GAAwC,IAAlBpD,EAAiB,EAAjBA,MAAOqD,EAAU,EAAVA,MAI5BC,EAAc,CAClB,CACEC,MAAO,QACPC,KAAM,aACNC,MAAO,OACPzE,KAAM,4EAER,CACEuE,MAAO,QACPC,KAAM,aACNC,MAAO,OACPzE,KAAM,kEAER,CACEuE,MAAO,WACPC,KAAM,gBACNC,MAAO,OACPzE,KAAM,kFAER,CACEuE,MAAO,QACPC,KAAM,GACNC,MAAO,GACPzE,KAAM,KAIV,OACE,sBAAKgC,UA9B0BqC,EAAQ,cAAgB,mBA8BvD,UAEE,qBAAKrC,UAAYsC,EAAYtD,GAAOwD,OAEpC,oBAAIxC,UAAU,yBAAd,SAAyCsC,EAAYtD,GAAOyD,QAE5D,mBAAGzC,UAAU,wBAAb,SAAuCsC,EAAYtD,GAAOhB,U,MCtCzD,SAAS0E,EAAT,GAAmC,IAAdC,EAAa,EAAbA,SAYxB,OAAO,qBAAK3C,UAAS,qBAVH,WAClB,OAAQ2C,GACJ,IAAK,QAAS,MAAO,aACrB,IAAK,aAAc,MAAO,kBAC1B,IAAK,MAAO,MAAO,WACnB,IAAK,QAAS,MAAO,aACrB,QAAS,MAAO,SAImBC,M,MCXpC,SAASC,EAAU9C,GAExB,MAAoCxE,mBAAS,SAA7C,mBAAQuH,EAAR,KAAmBC,EAAnB,KAEA,OACE,qBAAI/C,UAAU,YAAd,UAEE,qBACIyC,MAAM,+BACNzC,UAAU,mBACVgD,QAAUjD,EAAMkD,SAChBC,YAAc,kBAAMH,EAAa,eACjCI,aAAe,kBAAMJ,EAAa,UALtC,SAOE,cAAC,EAAD,CAAUJ,SAAWG,MAIvB,qBACIL,MAAM,oCACNzC,UAAS,0BAAsBD,EAAMH,WAAa,kBAClDoD,QAAUjD,EAAMqD,WAHpB,SAKE,cAAC,EAAD,CAAUT,SAAQ,UAAM5C,EAAMH,WAAa,aAG7C,mBAAGI,UAAS,qBAAiBD,EAAMH,WAAa,kBAAhD,SAAwEG,EAAM/B,U,MC3B7E,SAASqF,EAAkBtD,GAEhC,OACE,wBACEC,UAAU,YACVgD,QAAUjD,EAAMF,kBAFlB,SAKIE,EAAMrE,QAAUqE,EAAME,YAAcF,EAAMuD,kBCR3C,SAASC,EAAOxD,GAErB,OAAOyD,IAASC,aAAc,mCAAI1D,EAAM2D,gBAAoBC,SAASC,eAAe,U,MCF/E,SAASC,EAAT,GAA8D,IAAzCpE,EAAwC,EAAxCA,QAASpC,EAA+B,EAA/BA,aAAcE,EAAiB,EAAjBA,aAEjD,EAA0ChC,mBAAS,IAAnD,mBAAQuI,EAAR,KAAsBC,EAAtB,KACA,EAA8BxI,mBAAU,qCAAxC,mBAAQyI,EAAR,KAAgBC,EAAhB,KA2BA,OAEE,qBAAKjE,UAAU,QAAf,SACE,uBAAMkE,SAnBQ,SAAAtF,IACdA,EAAGuF,iBACkB,KAAjBL,GAEFG,EAAW,8DAGCxE,EAASqE,KAGnBC,EAAgB,IAChBE,EAAW,0EAQcjE,UAAU,cAAvC,UACE,uBAAOA,UAAU,oBAAjB,2CACA,0BACEA,UAAU,uBACVhB,MAAQ8E,EACR1D,YAAc4D,EACd3D,SAlCS,SAAAzB,GACfmF,EAAiBnF,EAAGG,OAAOC,UAmCvB,sBAAKgB,UAAU,0BAAf,UACE,wBACEA,UAAU,8BACVoE,KAAK,SACLpB,QApCO,WACf3F,GAAc,GACdE,EAAc,wBA+BR,sBAKA,wBACEyC,UAAU,2BACVoE,KAAK,SAFP,+B,MCvBH,ICzB8BC,EDyBxBC,GCzBwBD,EDErC,YAA8C,IAAtBE,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,WAC1B,OAAGD,EAEO,qBAAKvE,UAAU,QAAf,SACE,sBAAKA,UAAU,cAAf,UACE,mBAAGA,UAAU,uCAAb,iJAGA,wBACEA,UAAU,8BACVgD,QAAU,kBAAMwB,GAAY,IAF9B,2BAWH,MCpBN,SAA8CzE,GAErD,MAA4CxE,oBAAU,GAAtD,mBAAQkJ,EAAR,KAAuBC,EAAvB,KAcA,OAZAjG,OAAOkG,iBAAiB,WAAW,SAAEC,GAChB,aAAfA,EAAOC,MAEThG,QAAQC,IAAI,4BACZ4F,GAAkB,OASlB,cAACL,EAAD,CACIE,KAAOE,EACPD,WAPW,WACjBzE,EAAMvE,SACNkJ,GAAkB,QCQf,SAASI,IAEd,MAkBM1J,IAjBJM,EADF,EACEA,QACAE,EAFF,EAEEA,MACA2C,EAHF,EAGEA,kBACArB,EAJF,EAIEA,YAAayB,EAJf,EAIeA,oBACbd,EALF,EAKEA,WACAoB,EANF,EAMEA,mBACAzB,EAPF,EAOEA,eACA0B,EARF,EAQEA,gBACApB,EATF,EASEA,cACAqB,EAVF,EAUEA,aACAI,EAXF,EAWEA,WACAE,EAZF,EAYEA,QACArC,EAbF,EAaEA,UAAWC,EAbb,EAaaA,aACXC,EAdF,EAcEA,UAAWC,EAdb,EAcaA,aACXsC,EAfF,EAeEA,kBACA5C,EAhBF,EAgBEA,gBACAD,EAjBF,EAiBEA,YAGF,OACE,qCAEE,cAAC,EAAD,CACEtB,QAAUA,EAEVuE,UAAY,kBAAM,qBAAKD,UAAU,kBAAf,SACE,cAACO,EAAD,CAAsBC,MAAQjC,SAGlD2B,cAAgB,kBAAM,0CAAI,cAAC,EAAD,IACA,cAAC,EAAD,CACEhD,YAAcA,EACdyB,oBAAsBA,UAMpD,cAAC,EAAD,CACEjD,QAAUA,EACVmC,WAAaA,EAEboC,UAAY,kBAAM,qBAAKD,UAAU,mBAAf,SACI,cAACkB,EAAD,CAAuBV,MAAQvB,SAGrD0C,QAAU,kBAAM,oBAAI3B,UAAU,gBAAd,yCAChB0B,eAAiB,kBAAM,qBAAI1B,UAAU,gBAAd,4BACiB,uBAAMA,UAAU,0BAAhB,UAA4CxC,EAA5C,OADjB,MAEM,sBAAMwC,UAAU,sBAAhB,SAAwCnC,UAKvE,cAAC,EAAD,CACEnC,QAAUA,EACVE,MAAQA,EACRsB,YAAcA,EACdY,cAAgBA,EAChBD,WAAaA,EAEboC,UAAY,SAACmB,GAAD,OAAY,qBAAKpB,UAAU,gBAAf,SACE,cAACmB,EAAD,CAAoBX,MAAQtB,IAAoBkC,KAAOA,OAIjFU,QAAU,kBAAM,cAAC,EAAD,CAAW9C,MAAQ,EAAIqD,OAAQ,KAC/CV,QAAU,kBAAM,cAAC,EAAD,CAAW3C,MAAQ,EAAIqD,OAAQ,KAC/CN,WAAa,kBAAM,cAAC,EAAD,CAAW/C,MAAQ,EAAIqD,OAAQ,KAClDL,QAAU,kBAAM,cAAC,EAAD,CAAWhD,MAAQ,EAAIqD,OAAQ,KAE/CH,OAAS,SAAAxE,GAAI,OACD,cAAC,EAAD,CAEIM,KAAON,EAAKM,KACZ4B,UAAYlC,EAAKC,SACjByF,WAAa,kBAAMjE,EAAczB,EAAKM,OACtCiF,SAAW,kBAAM1D,EAAY7B,EAAKM,QAJ5BN,EAAKM,OAnB7B,SA6BE,cAAC,EAAD,CACEtC,QAAUA,EACVmE,kBAAoBA,EAEpBI,UAAY,kBAAM,qBAAKD,UAAU,eAAf,SACE,cAACqB,EAAD,OAGpBiC,cAAgB,kBAAM,sBAAMtD,UAAY1C,EAAlB,SACE,cAAC,EAAD,CAAUqF,SAAS,eAO5CvF,IAAc1B,GACb,cAAC6H,EAAD,CACEG,YAAc,kBAAM,cAAC,EAAD,CACEjE,QAAUA,EACVpC,aAAeA,EACfE,aAAeA,OAOzCP,GACE,cAACuG,EAAD,CACEG,YAAc,kBAAM,cAACY,EAAD,CAAgC9I,OAASyB,UCxIzEuG,IAAStB,OAAQ,cAAC4C,EAAD,IAASnB,SAASC,eAAe,W","file":"static/js/main.4d063981.chunk.js","sourcesContent":["import { useState } from \"react\"\nimport { useLocalStorage } from \"./useLocalStorage\"\n\nexport function useTodos( ) {\n\n  const { item: todos, saveItem: saveTodos, loading, error, reload: reloadTodos, sincronize: sincronizeTodos } = useLocalStorage( 'TODOs_V1', [] )\n\n  const [ searchValue, setSearchValue ] = useState('')\n\n  const [ openModal, setOpenModal ] = useState( false )\n\n  const [ rotateAdd, setRotateAdd ] = useState('add__icon_container')\n\n  const completedTodos = todos.filter( todo => !!todo.complete).length\n  const totalTodos = todos.length\n\n  let searchedTodos = []\n  if(!searchValue.length >= 1)\n  {\n    searchedTodos = todos\n  }\n  else\n  {\n    searchedTodos = todos.filter( todo => {\n      const todoText = todo.text.toLowerCase()\n      const searchText = searchValue.toLowerCase()\n\n      return todoText.includes( searchText )\n    })\n  }\n\n  const onSearchValueChange = ev => {\n\t\tconsole.log( ev.target.value )\n\t\tsetSearchValue( ev.target.value )\n\t}\n\n  const addTodo = text => {\n\n    const newTodos = [ ...todos ]\n    const hay_uno_igual = newTodos.some( some => text === some.text )\n    if( hay_uno_igual ) {\n      console.log('no se puede añadir el todo porque hay uno igual')\n      return true\n    }\n    else {\n      newTodos.unshift( {\n        text,\n        completed: false\n      } )\n      saveTodos( newTodos )\n      setOpenModal( false )\n      setRotateAdd( 'add__icon_container' )\n      return false\n    }\n\n  }\n\n  const completeTodo = text => {\n    const todoIndex = todos.findIndex( todo => todo.text === text )\n\n    const newTodos = [ ...todos ]\n    newTodos[ todoIndex ].complete = true\n    saveTodos( newTodos )\n  }\n\n  const deleteTodo = text => {\n    const todoIndex = todos.findIndex( todo => todo.text === text )\n\n    const newTodos = [ ...todos ]\n    newTodos.splice( todoIndex, 1 )\n    saveTodos( newTodos )\n  }\n\n  const min_media = matchMedia('(min-width: 320px)')\n  const max_media = matchMedia('(max-width: 500px)')\n\n  const loadReziserHeader = () => {\n    if( !(min_media.matches ^ max_media.matches) )\n    {\n      return window.innerWidth\n    }\n    else if(min_media.matches){ return 500 }\n    else if(max_media.matches){ return 320 }\n  }\n\n  const loadReziserCounter = () => {\n    if( !(min_media.matches ^ max_media.matches) )\n    {\n      return window.innerWidth - 90\n    }\n    else if(min_media.matches){ return 410 }\n    else if(max_media.matches){ return 230 }\n  }\n\n  const loadReziserList = () => {\n    if( !(min_media.matches ^ max_media.matches) )\n    {\n      return window.innerWidth - 90\n    }\n    else if(min_media.matches){ return 410 }\n    else if(max_media.matches){ return 230 }\n  }\n\n  const onClickTodoButton = () => {\n    setOpenModal( openModal => !openModal )\n    if( rotateAdd === 'add__icon_container')\n    {\n      setRotateAdd( 'add__icon_container-active' )\n    }\n    else {\n      setRotateAdd( 'add__icon_container' )\n    }\n  }\n\n  return (\n\n    {\n      loading,\n      loadReziserHeader,\n      searchValue, onSearchValueChange,\n      loadReziserCounter,\n      totalTodos,\n      completedTodos,\n      loadReziserList,\n      searchedTodos,\n      completeTodo,\n      deleteTodo,\n      addTodo,\n      openModal, setOpenModal,\n      rotateAdd, setRotateAdd,\n      error,\n      onClickTodoButton,\n      sincronizeTodos,\n      reloadTodos\n    }\n\n  )\n\n}","import { useState, useEffect } from \"react\"\n\nexport function useLocalStorage( itemName, initialValue ) {\n\n  const [ reload, setReload ] = useState( true )\n  const [ loading, setLoading ] = useState( true )\n  const [ error, setError ] = useState( false )\n  const [ item, setItem ] = useState( initialValue )\n\n  useEffect( () => {\n\n    setTimeout( () => {\n\n      try {\n        const localStorageItems = localStorage.getItem( itemName )\n        let parsedItems\n\n        if( !localStorageItems )\n        {\n            localStorage.setItem( itemName, JSON.stringify( initialValue ) )\n            parsedItems = []\n        }\n        else\n        {\n            parsedItems = JSON.parse( localStorageItems )\n        }\n\n        setItem( parsedItems )\n        setLoading( false )\n        setReload( true )\n      }\n      catch(error) {\n        setError( error )\n      }\n\n    }, 1000 )\n\n  }, [ reload ] )\n\n  const saveItem = newItem => {\n\n    try {\n      const stringifiedItem = JSON.stringify( newItem )\n      localStorage.setItem( itemName, stringifiedItem )\n      setItem( newItem )\n    }\n    catch(error) {\n      setError( error )\n    }\n\n  }\n\n  const sincronize = () => {\n    setLoading( true )\n    setReload( false )\n  }\n\n  return { item, saveItem, loading, error, reload, sincronize }\n}","import React from \"react\"\nimport './index.css'\n\nexport function Header( props ) {\n\n  return (\n    <header className=\"header\">\n\n      { props.loading ? props.onLoading() : props.onHeaderReady() }\n\n    </header>\n  )\n}","import React from \"react\"\nimport \"./index.css\"\n\nexport function TodoSearch( { searchValue, onSearchValueChange } ) {\n\n\treturn (\n\t\t<input\n\t\t\tclassName=\"TodoSearch\"\n\t\t\tplaceholder=\"Encuentra un ToDo :)\"\n\t\t\tvalue={ searchValue }\n\t\t\tonChange={ onSearchValueChange }\n\t\t/>\n\t)\n\n}","import React from \"react\"\nimport './index.css'\n\nexport function TodoLogo() {\n    return (\n        <div className=\"todo__logo\"></div>\n    )\n}","import React, { useState } from \"react\"\nimport ContentLoader from \"react-content-loader\"\n\nexport function SkeletonLoaderHeader( props ) {\n\n  const [ ancho ] = useState( props.ancho )\n\n  return (\n    <ContentLoader\n      speed={ 0.5 }\n      width={ ancho }\n      height={ 80 }\n      backgroundColor=\"#243441\"\n      foregroundColor=\"#3d4b56\"\n      {...props}\n    >\n    <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"500\" height=\"80\" />\n\n    </ContentLoader>\n  )\n}\n\nexport function SkeletonLoaderCounter( props ) {\n\n  const [ ancho ] = useState( props.ancho )\n\n  return (\n    <ContentLoader\n      speed={ 0.5 }\n      width={ ancho }\n      height={ 60 }\n      backgroundColor=\"#243441\"\n      foregroundColor=\"#3d4b56\"\n      {...props}\n    >\n    <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"410\" height=\"60\" />\n\n    </ContentLoader>\n  )\n}\n\nexport function SkeletonLoaderList( props ) {\n\n  const [ ancho ] = useState( props.ancho )\n  const [ alto ] = useState( props.alto )\n\n  return (\n    <ContentLoader\n    speed={ 0.5 }\n    width={ ancho }\n    height={ alto }\n    backgroundColor=\"#243441\"\n    foregroundColor=\"#3d4b56\"\n    {...props}\n  >\n\n    <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"410\" height=\"1024\" />\n\n  </ContentLoader>\n  )\n}\n\nexport function SkeletonLoaderButton( props ) {\n\n  return (\n    <ContentLoader\n    speed={ 0.5 }\n    width={ 40 }\n    height={ 40 }\n    backgroundColor=\"#243441\"\n    foregroundColor=\"#3d4b56\"\n    {...props}\n  >\n\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n\n  </ContentLoader>\n  )\n}","import React from \"react\"\nimport \"./index.css\"\n\nexport function TodoCounter( props ) {\n\n  return (\n    <section className=\"counter__container\">\n\n      { props.loading\n          ? props.onLoading()\n          : props.totalTodos\n              ? props.onCounterReady()\n              : props.onEmpty()\n      }\n\n    </section>\n\n  )\n\n}","import React from \"react\"\nimport \"./index.css\"\n\nexport function TodoList( props ) {\n\n  const calcularAlto = () => {\n    return window.innerHeight - 160\n  }\n\n  return (\n\n    <main className=\"main__container\">\n      <section className={ props.loading ? 'list__container app-loading' : 'list__container app-ready'}>\n\n        { props.loading && props.onLoading( calcularAlto() ) }\n\n        { props.error && props.onError() }\n\n        { ( !props.loading && !props.totalTodos ) && props.onEmpty() }\n\n        { ( !props.searchedTodos.length && props.totalTodos && props.searchValue ) ? props.onNotFound() : props.onClean() }\n\n        <ul>\n          { props.searchedTodos.map( props.render ) }\n        </ul>\n\n      </section>\n\n      { props.children }\n\n    </main>\n\n  )\n\n}","import React from 'react'\nimport './index.css'\n\nexport function TodoState( { value, clean } ) {\n\n  const showState = () => { return clean ? 'display-off' : 'state__container' }\n\n  const arrayStates = [\n    {\n      state: 'error',\n      icon: 'icon-error',\n      title: 'Upss',\n      text: 'Ha ocurrido un Error, por favor revise su conexión y recargue la app.'\n    },\n    {\n      state: 'empty',\n      icon: 'icon-empty',\n      title: 'Hola',\n      text: 'Parece que no tienes tareas, ¿te gustaría añadir una?'\n    },\n    {\n      state: 'notfound',\n      icon: 'icon-notfound',\n      title: 'Nada',\n      text: 'Parece que el ToDo no está, prueba con otra palabra que creas que coincide.'\n    },\n    {\n      state: 'clean',\n      icon: '',\n      title: '',\n      text: ''\n    }\n  ]\n\n  return (\n    <div className={ showState() }>\n\n      <div className={ arrayStates[value].icon }></div>\n\n      <h3 className=\"state__container_title\">{ arrayStates[value].title }</h3>\n\n      <p className=\"state__container_text\">{ arrayStates[value].text }</p>\n\n    </div>\n  )\n}","import React from \"react\"\nimport './index.css'\n\nexport function TodoIcon( { typeIcon } ) {\n\n  const selectClass = () => {\n    switch( typeIcon ){\n        case 'Trash': return 'icon-trash'\n        case 'Trash_open': return 'icon-trash_open'\n        case 'Add': return 'icon-add'\n        case 'Check': return 'icon-check'\n        default: return 'empty'\n    }\n  }\n\n    return <div className={ `icon_style ${ selectClass() }` } />\n\n}","import React, { useState } from \"react\"\nimport { TodoIcon } from \"../TodoIcon\"\nimport \"./index.css\"\n\nexport function TodoItem( props ) {\n\n  const [ iconTrash, setIconTrash ] = useState('Trash')\n\n  return (\n    <li className=\"todo-item\">\n\n      <div\n          title=\"Click para eliminar la tarea\"\n          className=\"item__icon-close\"\n          onClick={ props.onDelete }\n          onMouseOver={ () => setIconTrash('Trash_open') }\n          onMouseLeave={ () => setIconTrash('Trash') }\n      >\n        <TodoIcon typeIcon={ iconTrash }/>\n\n      </div>\n\n      <div\n          title=\"Click para marcar como completada\"\n          className={`item__icon_task ${ props.completed && 'task-completed' }` }\n          onClick={ props.onComplete }\n      >\n        <TodoIcon typeIcon={`${ props.completed && 'Check' }` }/>\n      </div>\n\n      <p className={`item__text ${ props.completed && 'text-completed' }` }>{ props.text }</p>\n    </li>\n  )\n\n}","import React from \"react\"\nimport \"./index.css\"\n\nexport function CreateTodoButtom( props ) {\n\n  return (\n    <button\n      className=\"add__todo\"\n      onClick={ props.onClickTodoButton }\n    >\n\n      { props.loading ? props.onLoading() : props.onButtonReady() }\n\n    </button>\n  )\n\n}","import React from \"react\"\nimport ReactDOM from 'react-dom'\n\nexport function Modal( props ) {\n\n  return ReactDOM.createPortal( <>{ props.onShowModal() }</>, document.getElementById('modal') )\n\n}","import React, { useState } from \"react\"\nimport './index.css'\n\nexport function TodoForm( { addTodo, setOpenModal, setRotateAdd } ) {\n\n  const [ newTodoValue, setNewTodoValue ] = useState('')\n  const [ holder, setHolder ] = useState( '¿Tienes algo más que hacer?' )\n\n  const onChange = ev => {\n    setNewTodoValue( ev.target.value )\n  }\n\n  const onCancel = () => {\n    setOpenModal( false )\n    setRotateAdd( 'add__icon_container' )\n  }\n\n  const onAddTodo = ev => {\n      ev.preventDefault()\n      if( newTodoValue === '' )\n      {\n        setHolder( 'Por favor no dejes ToDos en blanco ;) esto no es el tetris' )\n      }\n      else {\n        let match = addTodo( newTodoValue )\n        if( match )\n        {\n          setNewTodoValue('')\n          setHolder( 'Ya tienes un ToDo igual a ese, escribe uno nuevo o busca el viejo ;)' )\n        }\n      }\n  }\n\n  return (\n\n    <div className=\"modal\">\n      <form onSubmit={ onAddTodo } className=\"modal__form\">\n        <label className=\"modal__form_label\">¡Añade una nueva tarea!</label>\n        <textarea\n          className=\"modal__form_textarea\"\n          value={ newTodoValue }\n          placeholder={ holder }\n          onChange={ onChange }\n        />\n        <div className=\"modal__button_container\">\n          <button\n            className=\"button modal__button-cancel\"\n            type=\"button\"\n            onClick={ onCancel }\n          >Cancelar</button>\n          <button\n            className=\"button modal__button-add\"\n            type=\"submit\"\n          >Añadir</button>\n        </div>\n      </form>\n    </div>\n\n  )\n}","import React from \"react\"\nimport { withStorageListener } from \"./withStorageListener\"\nimport \"./index.css\"\n\nfunction ChangeAlert( { show, toggleShow } ) {\n    if(show) {\n      return (\n              <div className=\"modal\">\n                <div className=\"modal__form\">\n                  <p className=\"modal__form_label modal__reload_text\"\n                  >Al parecer hubo cambios en la app desde otra ventana o pestaña del navegador. Necesitas Recargar la app para traer esos cambios.\n                  </p>\n                  <button\n                    className=\"button modal__button-cancel\"\n                    onClick={ () => toggleShow( false ) }\n                  >\n                    Recargar\n                  </button>\n                </div>\n              </div>\n              )\n    }\n    else{\n        return null\n    }\n}\n\nexport const ChangeAlertWithStorageListener = withStorageListener( ChangeAlert )","import React, { useState } from \"react\"\n\nexport function withStorageListener( WrappedComponent ) {\n  return function WrappedComponentWithStoragelistener( props ) {\n\n  const [ storageChange, setStorageChange ] = useState( false )\n\n  window.addEventListener('storage', ( change ) => {\n    if( change.key === 'TODOs_V1')\n    {\n      console.log('Hubo cambios en TODOs_V1')\n      setStorageChange( true )\n    }\n  })\n\n  const toggleShow = () => {\n    props.reload()\n    setStorageChange( false )\n  }\n  return (\n      <WrappedComponent\n          show={ storageChange }\n          toggleShow={ toggleShow }\n      />\n    )\n  }\n}","import React from \"react\"\nimport { useTodos } from \"./Hooks/useTodos\"\n\nimport { Header } from \"../Components/Header\"\nimport { TodoSearch } from \"../Components/TodoSearch\"\nimport { TodoLogo } from \"../Components/TodoLogo\"\nimport {  SkeletonLoaderHeader,\n          SkeletonLoaderList,\n          SkeletonLoaderCounter,\n          SkeletonLoaderButton } from \"../Components/SkeletonLoader\"\n\nimport { TodoCounter } from \"../Components/TodoCounter\"\n\nimport { TodoList } from \"../Components/TodoList\"\nimport { TodoState } from \"../Components/TodoState\"\nimport { TodoItem } from \"../Components/TodoItem\"\n\nimport { CreateTodoButtom } from \"../Components/CreateTodoButtom\"\nimport { TodoIcon } from \"../Components/TodoIcon\"\n\nimport { Modal } from \"../Components/Modal\"\nimport { TodoForm } from \"../Components/TodoForm/index\"\n\nimport { ChangeAlertWithStorageListener } from \"../Components/ChangeAlert\"\n\nexport function App() {\n\n  const {\n    loading,\n    error,\n    loadReziserHeader,\n    searchValue, onSearchValueChange,\n    totalTodos,\n    loadReziserCounter,\n    completedTodos,\n    loadReziserList,\n    searchedTodos,\n    completeTodo,\n    deleteTodo,\n    addTodo,\n    openModal, setOpenModal,\n    rotateAdd, setRotateAdd,\n    onClickTodoButton,\n    sincronizeTodos,\n    reloadTodos\n    } = useTodos()\n\n  return (\n    <>\n\n      <Header\n        loading={ loading }\n\n        onLoading={ () => <div className=\"loading__header\">\n                            <SkeletonLoaderHeader ancho={ loadReziserHeader() }/>\n                          </div>\n                  }\n        onHeaderReady={ () => <>  <TodoLogo />\n                                  <TodoSearch\n                                    searchValue={ searchValue }\n                                    onSearchValueChange={ onSearchValueChange }\n                                  />\n                              </>\n                      }\n      />\n\n      <TodoCounter\n        loading={ loading }\n        totalTodos={ totalTodos }\n\n        onLoading={ () => <div className=\"loading__counter\">\n                              <SkeletonLoaderCounter ancho={ loadReziserCounter() }/>\n                            </div>\n                  }\n        onEmpty={ () => <h2 className=\"counter__text\">No tienes tareas aún :)</h2> }\n        onCounterReady={ () => <h2 className=\"counter__text\"\n                                >Has completado <span className=\"counter__text-completed\">{ completedTodos } </span>\n                                  de <span className=\"counter__text-total\">{ totalTodos }</span>\n                              </h2>\n                        }\n      />\n\n      <TodoList\n        loading={ loading }\n        error={ error }\n        searchValue={ searchValue }\n        searchedTodos={ searchedTodos }\n        totalTodos={ totalTodos }\n\n        onLoading={ (alto) => ( <div className=\"loading__list\">\n                                  <SkeletonLoaderList ancho={ loadReziserList() } alto={ alto }/>\n                                </div>\n                          )\n                  }\n        onError={ () => <TodoState value={ 0 } clean={ false } /> }\n        onEmpty={ () => <TodoState value={ 1 } clean={ false } /> }\n        onNotFound={ () => <TodoState value={ 2 } clean={ false }/> }\n        onClean={ () => <TodoState value={ 3 } clean={ true }/> }\n\n        render={ todo => (\n                    <TodoItem\n                        key={ todo.text }\n                        text={ todo.text }\n                        completed={ todo.complete }\n                        onComplete={ () => completeTodo( todo.text ) }\n                        onDelete={ () => deleteTodo( todo.text ) }\n                    />\n                  )\n                }\n      >\n\n        <CreateTodoButtom\n          loading={ loading }\n          onClickTodoButton={ onClickTodoButton }\n\n          onLoading={ () => <div className=\"loading__btn\">\n                              <SkeletonLoaderButton />\n                            </div>\n                    }\n          onButtonReady={ () => <span className={ rotateAdd }>\n                                  <TodoIcon typeIcon='Add'/>\n                                </span>\n                        }\n        />\n\n      </TodoList>\n\n      { (openModal && !loading ) && (\n          <Modal\n            onShowModal={ () => <TodoForm\n                                  addTodo={ addTodo }\n                                  setOpenModal={ setOpenModal }\n                                  setRotateAdd={ setRotateAdd }\n                                />\n                        }\n          />\n        )\n      }\n\n      { reloadTodos && (\n          <Modal\n            onShowModal={ () => <ChangeAlertWithStorageListener reload={ sincronizeTodos }/> }\n          />\n        )\n      }\n\n    </>\n  )\n\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App/index.jsx'\n\nReactDOM.render( <App />, document.getElementById('root') )"],"sourceRoot":""}